#
# Infrastructure template for Moodle on two instances plus all network infrastructure.
#
# DNS pre-configured for the Porirua (nz-por-1) region of the Catalyst Cloud.
#

heat_template_version: 2013-05-23

description: >
  Infrastructure template for Moodle on two instances plus all network infrastructure.
parameter_groups:
- label: Infrastructure
  description: Infrastructure configuration
  parameters:
  - key_name
  - servers_flavor
  - image
  - public_net
  - public_net_id
  - private_net_name
  - private_net_cidr
  - private_net_gateway
  - private_net_pool_start
  - private_net_pool_end
  - private_net_dns_servers
  - router_name
- label: Moodle
  description: Moodle instance configuration
  parameters:
  - site_name
  - environment
  - app_type
  - site_url
  - moodle_version
- label: Database
  description: Database configuration
  parameters:
  - db_root_password

parameters:

# Infrastructure

  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair
    default: cristiano

  servers_flavor:
    type: string
    description: Flavour for the database servers
    default: c1.c1r1
    constraints:
      - custom_constraint: nova.flavor

  image:
    type: string
    description: Image ID or image name to use for the server
    default: ubuntu-14.04-x86_64
    constraints:
      - custom_constraint: glance.image

  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
    default: public-net

  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
    default: 849ab1e9-7ac5-4618-8801-e6176fbbcf30
 
  private_net_name:
    type: string
    description: Name of private network to be created
    default: private-net

  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 192.168.0.0/24

  private_net_gateway:
    type: string
    description: Private network gateway address
    default: 192.168.0.1

  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
    default: 192.168.0.10

  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
    default: 192.168.0.250

  private_net_dns_servers:
    type: comma_delimited_list
    description: DNS servers for the private network
    default: [ 202.78.247.197, 202.78.247.198, 202.78.247.199 ]

  router_name:
    type: string
    description: >
      Name of the router that will connect the private and public networks
    default: moodle-router

# Moodle configuration

  site_name:
    type: string
    description: The value of the $SITENAME variable

  environment:
    type: string
    description: The value of the $ENVIRONMENT variable
    default: 

  app_type:
    type: string
    description: The value of the $APPTYPE variable

  site_url:
    type: string
    description: The site URL

  moodle_version:
    type: string
    description: Moodle version
    default: 27


# Database

  db_root_password:
    type: string
    description: Root password for PostgreSQL
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters

resources:

# Networks and routers

  private_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name }

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      allocation_pools:
        - start: { get_param: private_net_pool_start }
          end: { get_param: private_net_pool_end }
      dns_nameservers: { get_param: private_net_dns_servers }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }
      name: { get_param: router_name }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

# Infrastructure layer
# DB Server

  postgres_server:
    type: OS::Nova::Server
    properties:
      name: pg-dbserver
      image: { get_param: image }
      flavor: { get_param: servers_flavor }
      key_name: { get_param: key_name }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: dbserver_rootvol }
          delete_on_termination: false
      networks:
        - port: { get_resource: dbserver_port }
      user_data:
        str_replace:
          template: { get_file: postgres.sh }
          params:
            db_rootpassword: { get_param: db_root_password }
            site_name: { get_param: site_name }
            environment: { get_param: environment }
            app_type: { get_param: app_type }
            site_url: { get_param: site_url }

  dbserver_rootvol:
    type: OS::Cinder::Volume
    properties:
      name: pg-dbserver-rootvol
      image: { get_param: image }
      size: 15

  dbserver_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
      security_groups:
        - { get_resource: secgroup_dbserver }

  secgroup_dbserver:
    type: OS::Neutron::SecurityGroup
    properties:
      name: dbservers
      description: Postgres
      rules:
        - direction: ingress
          protocol: tcp
          remote_group_id: { get_resource: secgroup_webserver }
          remote_mode: remote_group_id
          port_range_min: 5432
          port_range_max: 5432


# Web Server
  web_server:
    type: OS::Nova::Server
    properties:
      name: webserver
      image: { get_param: image }
      flavor: { get_param: servers_flavor }
      key_name: { get_param: key_name }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: webserver_rootvol }
          delete_on_termination: false
      networks:
        - port: { get_resource: web_server_port }
      user_data:
        str_replace:
          template: { get_file: webserver.sh }
          params:
            site_name: { get_param: site_name }
            environment: { get_param: environment }
            app_type: { get_param: app_type }
            site_url: { get_param: site_url }
            dbserver_ip: { get_attr: [ postgres_server, first_address ] }
            db_rootpassword: { get_param: db_root_password }
            moodle_version: { get_param: moodle_version }
    depends_on: postgres_server

  webserver_rootvol:
    type: OS::Cinder::Volume
    properties:
      name: webserver-rootvol
      image: { get_param: image }
      size: 15

  web_server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
      security_groups:
        - { get_resource: secgroup_webserver }

  secgroup_webserver:
    type: OS::Neutron::SecurityGroup
    properties:
      name: webservers
      description: Moodle
      rules:
        - direction: ingress
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
        - direction: ingress
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 443
          port_range_max: 443
        - direction: ingress
          protocol: tcp
          remote_ip_prefix: 202.78.240.7/32
          port_range_min: 22
          port_range_max: 22

  webserver_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
#      Floating network not supported in IceHouse
#      floating_network: { get_param: public_net }
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: web_server_port }
    depends_on: router_interface

outputs:

  dbserver_private_ip:
    description: IP address of webserver in private network
    value: { get_attr: [ postgres_server, first_address ] }

  webserver_private_ip:
    description: IP address of webserver in private network
    value: { get_attr: [ web_server, first_address ] }

  webserver_public_ip:
    description: Floating IP address of webserver1 in public network
    value: { get_attr: [ webserver_floating_ip, floating_ip_address ] }

